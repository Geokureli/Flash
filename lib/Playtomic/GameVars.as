/* Playtomic ActionScript 3 API----------------------------------------------------------------------- Documentation is available at:  	https://playtomic.com/api/as3 Support is available at: 	https://playtomic.com/community  	https://playtomic.com/issues 	https://playtomic.com/support has more options if you're a premium user Github repositories: 	https://github.com/playtomicYou may modify this SDK if you wish but be kind to our servers.  Becareful about modifying the analytics stuff as it may give you borked reports.Pull requests are welcome if you spot a bug or know a more efficientway to implement something.Copyright (c) 2011 Playtomic Inc.  Playtomic APIs and SDKs are licensed under the MIT license.  Certain portions may come from 3rd parties and carry their own licensing terms and are referenced where applicable.*/package Playtomic{	public final class GameVars	{		private static var SECTION:String;		private static var LOAD:String;		private static var LOADSINGLE:String;				internal static function Initialise(apikey:String):void		{			SECTION = Encode.MD5("gamevars-" + apikey);			LOAD = Encode.MD5("gamevars-load-" + apikey);			LOADSINGLE = Encode.MD5("gamevars-loadsingle-" + apikey);		}				/**		 * Loads your GameVars 		 * @param	callback	Your function to receive the data:  callback(gamevars:Object, response:Response)		 */		public static function Load(callback:Function):void		{			PRequest.Load(SECTION, LOAD, LoadComplete, callback, null);		}				/**		 * Loads a single GameVar		 * @param	name	The name of the var you want to laod		 * @param	callback	Your function recieve the data:  callback(gamevar:Object, response:Response)		 */		public static function LoadSingle(name:String, callback:Function):void		{			var postdata:Object = new Object();			postdata["name"] = name;						PRequest.Load(SECTION, LOADSINGLE, LoadComplete, callback, postdata);		}				/**		 * Processes the response received from the server, returns the data and response to the user's callback		 * @param	callback	The user's callback function		 * @param	postdata	The data that was posted		 * @param	data		The XML returned from the server		 * @param	status		The request status returned from the esrver (1 for success)		 * @param	errorcode	The errorcode returned from the server (0 for none)		 */		private static function LoadComplete(callback:Function, postdata:Object, data:XML = null, response:Response = null):void		{			if(callback == null)				return;							var result:Object = new Object();			if(response.Success)			{								var entries:XMLList = data["gamevar"];				var name:String;				var value:String;				for each(var item:XML in entries) 				{					name = item["name"];					value = item["value"];										result[name] = value;				}			}						postdata = postdata;			callback(result, response);		}	}}